
*** These modified files were found in JOE when it aborted on Wed Aug 15 09:01:20 2012
*** JOE was aborted by UNIX signal 1

*** File '(Unnamed)'
haproxy.py
get_haproxy_phys

*** File 'haproxy.py'
#!/usr/bin/env python
""" simple haproxy status socket plugin to get hosts from an haproxy server """

import sys
import socket
import json
import sshmap

def name():
  return 'haproxy'

def expand(value):
  tmplist=[]
  for host in [i.strip() for i in open(value,'r').readlines()]:
    if not host.startswith('#') and len(host.strip()):
      tmplist.append(host)
  return tmplist

def get_haproxy_socket_filename():
  socket_file=None
  # Open the haproxy config and see if we can find the socket file
  for line in open('/etc/haproxy/haproxy.cfg'):
    splitline=line.strip().split()
    if len(splitline) > 2 and splitline[0] == 'stats' and splitline[1] == 'socket':
      socket_file=splitline[2]
      break
  return socket_file

def query_haproxy_socket(socket_file='/tmp/haproxy',command='show stat'):
  if not command.endswith('\n'):
    command=command+'\n'
  s = socket.socket(socket.AF_UNIX, socket.SOCK_STREAM)
  s.connect(socket_file)
  s.send(command)
  data=""
  d=s.recv(1024)
  while d:
    data=data+d
    d=s.recv(1024)
  #data = s.recv()
  s.close()
  return data

def get_backends(vip):  
  hosts=[]
  for line in query_haproxy_socket(get_haproxy_socket_filename(),'show stat').split('\n'):
    if not line.startswith('#') and len(line.strip()):
      splitline=line.strip().split(',')
      if splitline[0]==vip and splitline[1] != 'BACKEND':
        hosts.append(splitline[1])
  return hosts

print json.dumps(get_backends(sys.argv[1]),indent=4)
